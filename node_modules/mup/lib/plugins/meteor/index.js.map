{"version":3,"sources":["../../../src/plugins/meteor/index.js"],"names":["prepareConfig","_commands","description","commands","validate","meteor","app","config","utils","docker","image","dockerImage","hooks","api","getConfig","type","runCommand"],"mappings":";;;;;;;;;QAkBgBA,a,GAAAA,a;;AAlBhB;;IAAYC,S;;AACZ;;;;;;;;AAEO,IAAMC,oCAAc,+BAApB;;AAEA,IAAIC,8BAAWF,SAAf;;AAEA,IAAMG,8BAAW;AACtBC,4BADsB;AAEtBC,KAFsB,eAElBC,MAFkB,EAEVC,KAFU,EAEH;AACjB,QAAI,QAAOD,OAAOF,MAAd,MAAyB,QAA7B,EAAuC;AACrC;AACA,aAAO,EAAP;AACD;AACD,WAAO,wBAAWE,MAAX,EAAmBC,KAAnB,CAAP;AACD;AARqB,CAAjB;;AAWA,SAASR,aAAT,CAAuBO,MAAvB,EAA+B;AACpC,MAAI,CAACA,OAAOD,GAAZ,EAAiB;AACf,WAAOC,MAAP;AACD;;AAEDA,SAAOD,GAAP,CAAWG,MAAX,GAAoBF,OAAOD,GAAP,CAAWG,MAAX,IAAqB,EAAzC;AACAF,SAAOD,GAAP,CAAWG,MAAX,CAAkBC,KAAlB,GAA0BH,OAAOD,GAAP,CAAWG,MAAX,CAAkBC,KAAlB,IAA2BH,OAAOD,GAAP,CAAWK,WAAtC,IAAqD,kBAA/E;AACA,SAAOJ,OAAOD,GAAP,CAAWK,WAAlB;AACA,SAAOJ,MAAP;AACD;;AAEM,IAAIK,wBAAQ;AACjB,sBADiB,4BACIC,GADJ,EACS;AACxB,QAAMN,SAASM,IAAIC,SAAJ,EAAf;AACA,QAAIP,OAAOD,GAAP,IAAcC,OAAOD,GAAP,CAAWS,IAAX,KAAoB,QAAtC,EAAgD;AAC9C,aAAOF,IAAIG,UAAJ,CAAe,cAAf,CAAP;AACD;AACF,GANgB;AAOjB,uBAPiB,6BAOKH,GAPL,EAOU;AACzB,QAAMN,SAASM,IAAIC,SAAJ,EAAf;AACA,QAAIP,OAAOD,GAAP,IAAcC,OAAOD,GAAP,CAAWS,IAAX,KAAoB,QAAtC,EAAgD;AAC9C,aAAOF,IAAIG,UAAJ,CAAe,eAAf,CAAP;AACD;AACF;AAZgB,CAAZ","file":"index.js","sourcesContent":["import * as _commands from './commands';\nimport _validator from './validate';\n\nexport const description = 'Deploy and manage meteor apps';\n\nexport let commands = _commands;\n\nexport const validate = {\n  meteor: _validator,\n  app(config, utils) {\n    if (typeof config.meteor === 'object') {\n      // The meteor validator will check the config\n      return [];\n    }\n    return _validator(config, utils);\n  }\n};\n\nexport function prepareConfig(config) {\n  if (!config.app) {\n    return config;\n  }\n\n  config.app.docker = config.app.docker || {};\n  config.app.docker.image = config.app.docker.image || config.app.dockerImage || 'kadirahq/meteord';\n  delete config.app.dockerImage;\n  return config;\n}\n\nexport let hooks = {\n  'post.default.setup'(api) {\n    const config = api.getConfig();\n    if (config.app && config.app.type === 'meteor') {\n      return api.runCommand('meteor.setup');\n    }\n  },\n  'post.default.deploy'(api) {\n    const config = api.getConfig();\n    if (config.app && config.app.type === 'meteor') {\n      return api.runCommand('meteor.deploy');\n    }\n  }\n};\n"]}