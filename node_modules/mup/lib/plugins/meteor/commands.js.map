{"version":3,"sources":["../../../src/plugins/meteor/commands.js"],"names":["commandHandlers","setup","description","handler","deploy","builder","subYargs","option","boolean","logs","yargs","strict","alias","number","start","stop","restart","push","envconfig"],"mappings":";;;;;;;AAAA;;IAAYA,e;;;;AAEL,IAAIC,wBAAQ;AACjBC,eAAa,sCADI;AAEjBC,WAASH,gBAAgBC;AAFR,CAAZ;;AAKA,IAAIG,0BAAS;AAClBF,eAAa,oBADK;AAElBG,SAFkB,mBAEVC,QAFU,EAEA;AAChB,WAAOA,SAASC,MAAT,CAAgB,cAAhB,EAAgC;AACrCL,mBAAa,gCADwB;AAErCM,eAAS;AAF4B,KAAhC,CAAP;AAID,GAPiB;;AAQlBL,WAASH,gBAAgBI;AARP,CAAb;;AAWA,IAAIK,sBAAO;AAChBP,eAAa,yBADG;AAEhBG,SAFgB,mBAERK,KAFQ,EAED;AACb,WAAOA,MACJC,MADI,CACG,KADH,EAEJJ,MAFI,CAEG,MAFH,EAEW;AACdL,mBAAa,kDADC;AAEdU,aAAO,GAFO;AAGdC,cAAQ;AAHM,KAFX,EAOJN,MAPI,CAOG,QAPH,EAOa;AAChBL,mBAAa,mBADG;AAEhBU,aAAO,GAFS;AAGhBJ,eAAS;AAHO,KAPb,CAAP;AAYD,GAfe;;AAgBhBL,WAASH,gBAAgBS;AAhBT,CAAX;;AAmBA,IAAIK,wBAAQ;AACjBZ,eAAa,kBADI;AAEjBC,WAASH,gBAAgBc;AAFR,CAAZ;;AAKA,IAAIC,sBAAO;AAChBb,eAAa,iBADG;AAEhBC,WAASH,gBAAgBe;AAFT,CAAX;;AAKA,IAAIC,4BAAU;AACnBd,eAAa,oBADM;AAEnBC,WAASH,gBAAgBgB;AAFN,CAAd;;AAKP;AACO,IAAMC,sBAAO;AAClBf,eAAa,KADK;AAElBG,SAFkB,mBAEVK,KAFU,EAEH;AACb,WAAOA,MAAMH,MAAN,CAAa,cAAb,EAA6B;AAClCL,mBAAa,gCADqB;AAElCM,eAAS;AAFyB,KAA7B,CAAP;AAID,GAPiB;;AAQlBL,WAASH,gBAAgBiB;AARP,CAAb;;AAWA,IAAMC,gCAAY;AACvBhB,eAAa,KADU;AAEvBC,WAASH,gBAAgBkB;AAFF,CAAlB","file":"commands.js","sourcesContent":["import * as commandHandlers from './command-handlers';\n\nexport let setup = {\n  description: 'Prepare server to deploy meteor apps',\n  handler: commandHandlers.setup\n};\n\nexport let deploy = {\n  description: 'Deploy meteor apps',\n  builder(subYargs) {\n    return subYargs.option('cached-build', {\n      description: 'Use build from previous deploy',\n      boolean: true\n    });\n  },\n  handler: commandHandlers.deploy\n};\n\nexport let logs = {\n  description: 'View meteor app\\'s logs',\n  builder(yargs) {\n    return yargs\n      .strict(false)\n      .option('tail', {\n        description: 'Number of lines to show from the end of the logs',\n        alias: 't',\n        number: true\n      })\n      .option('follow', {\n        description: 'Follow log output',\n        alias: 'f',\n        boolean: true\n      });\n  },\n  handler: commandHandlers.logs\n};\n\nexport let start = {\n  description: 'Start meteor app',\n  handler: commandHandlers.start\n};\n\nexport let stop = {\n  description: 'Stop meteor app',\n  handler: commandHandlers.stop\n};\n\nexport let restart = {\n  description: 'Restart meteor app',\n  handler: commandHandlers.restart\n};\n\n// Hidden commands\nexport const push = {\n  description: false,\n  builder(yargs) {\n    return yargs.option('cached-build', {\n      description: 'Use build from previous deploy',\n      boolean: true\n    });\n  },\n  handler: commandHandlers.push\n};\n\nexport const envconfig = {\n  description: false,\n  handler: commandHandlers.envconfig\n};\n"]}