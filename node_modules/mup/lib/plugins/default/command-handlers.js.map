{"version":3,"sources":["../../../src/plugins/default/command-handlers.js"],"names":["deploy","init","logs","reconfig","restart","setup","start","stop","ssh","validate","log","config","silent","api","mupJs","resolvePath","__dirname","settinsJson","mupJsDst","process","cwd","settingsJsonDst","mupJsExists","existsSync","settingsJsonExist","cp","console","runCommand","then","on","displayNextSteps","code","getConfig","proxy","servers","serverOption","getArgs","Object","keys","join","exitCode","server","sshOptions","_createSSHOptions","conn","shell","err","stream","end","exit","stdin","setRawMode","pipe","stdout","stderr","setWindow","rows","columns","connect","getOptions","JSON","stringify"],"mappings":";;;;;QASgBA,M,GAAAA,M;QAIAC,I,GAAAA,I;QAwCAC,I,GAAAA,I;QAKAC,Q,GAAAA,Q;QAKAC,O,GAAAA,O;QAKAC,K,GAAAA,K;QAqBAC,K,GAAAA,K;QAKAC,I,GAAAA,I;QAKAC,G,GAAAA,G;QAqCAC,Q,GAAAA,Q;;AAxIhB;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMC,MAAM,qBAAM,oBAAN,CAAZ;;AAEA,kBAAGC,MAAH,CAAUC,MAAV,GAAmB,IAAnB;;AAEO,SAASZ,MAAT,GAAkB;AACvBU,MAAI,oBAAJ;AACD;;AAEM,SAAST,IAAT,CAAcY,GAAd,EAAmB;AACxBH,MAAI,kBAAJ;;AAEA,MAAMI,QAAQD,IAAIE,WAAJ,CAAgBC,SAAhB,EAA2B,wBAA3B,CAAd;AACA,MAAMC,cAAcJ,IAAIE,WAAJ,CAAgBC,SAAhB,EAA2B,wBAA3B,CAApB;AACA,MAAME,WAAWL,IAAIE,WAAJ,CAAgBI,QAAQC,GAAR,EAAhB,EAA+B,QAA/B,CAAjB;;AAEA,MAAMC,kBAAkBR,IAAIE,WAAJ,CAAgBI,QAAQC,GAAR,EAAhB,EAA+B,eAA/B,CAAxB;AACA,MAAME,cAAc,aAAGC,UAAH,CAAcL,QAAd,CAApB;AACA,MAAMM,oBAAoB,aAAGD,UAAH,CAAcF,eAAd,CAA1B;;AAEA,MAAI,CAACG,iBAAL,EAAwB;AACtB,sBAAGC,EAAH,CAAMR,WAAN,EAAmBI,eAAnB;AACAK,YAAQhB,GAAR,CAAY,uBAAZ;AACD,GAHD,MAGO;AACLgB,YAAQhB,GAAR,CAAY,qCAAZ;AACAgB,YAAQhB,GAAR,qCAA8CW,eAA9C;AACD;;AAED,MAAI,CAACC,WAAL,EAAkB;AAChB,sBAAGG,EAAH,CAAMX,KAAN,EAAaI,QAAb;;AAEAQ,YAAQhB,GAAR,CAAY,gBAAZ;AACAgB,YAAQhB,GAAR,CAAY,EAAZ;AACAgB,YAAQhB,GAAR,CAAY,aAAZ;AACAgB,YAAQhB,GAAR,CAAY,EAAZ;AACAgB,YAAQhB,GAAR,CAAY,uDAAZ;AACAgB,YAAQhB,GAAR,CAAY,0DAAZ;AACAgB,YAAQhB,GAAR,CAAY,EAAZ;AACAgB,YAAQhB,GAAR,CAAY,iDAAZ;AACAgB,YAAQhB,GAAR,CAAY,yCAAZ;AACAgB,YAAQhB,GAAR,CAAY,EAAZ;AACAgB,YAAQhB,GAAR,CAAY,0BAAZ;AACAgB,YAAQhB,GAAR,CAAY,eAAZ;AACD,GAfD,MAeO;AACLgB,YAAQhB,GAAR,CAAY,6BAAZ;AACAgB,YAAQhB,GAAR,+BAAwCQ,QAAxC;AACD;AACF;;AAEM,SAAShB,IAAT,CAAcW,GAAd,EAAmB;AACxBH,MAAI,kBAAJ;AACA,SAAOG,IAAIc,UAAJ,CAAe,aAAf,CAAP;AACD;;AAEM,SAASxB,QAAT,CAAkBU,GAAlB,EAAuB;AAC5BH,MAAI,sBAAJ;AACA,SAAOG,IAAIc,UAAJ,CAAe,kBAAf,EAAmCC,IAAnC,CAAwC;AAAA,WAAMf,IAAIc,UAAJ,CAAe,cAAf,CAAN;AAAA,GAAxC,CAAP;AACD;;AAEM,SAASvB,OAAT,CAAiBS,GAAjB,EAAsB;AAC3BH,MAAI,qBAAJ;AACA,SAAOG,IAAIc,UAAJ,CAAe,gBAAf,CAAP;AACD;;AAEM,SAAStB,KAAT,CAAeQ,GAAf,EAAoB;AACzBM,UAAQU,EAAR,CAAW,MAAX,EAAmB,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AACjD,QAAIA,OAAO,CAAX,EAAc;AACZ;AACD;;AAEDL,YAAQhB,GAAR,CAAY,EAAZ;AACAgB,YAAQhB,GAAR,CAAY,uBAAZ;AACAgB,YAAQhB,GAAR,CAAY,gBAAZ;AACD,GARD;;AAUAA,MAAI,mBAAJ;AACA,MAAMC,SAASE,IAAImB,SAAJ,EAAf;AACA,SAAOnB,IAAIc,UAAJ,CAAe,cAAf,EACJC,IADI,CACC,YAAM;AACV,QAAIjB,OAAOsB,KAAX,EAAkB;AAChB,aAAOpB,IAAIc,UAAJ,CAAe,aAAf,CAAP;AACD;AACF,GALI,CAAP;AAMD;;AAEM,SAASrB,KAAT,CAAeO,GAAf,EAAoB;AACzBH,MAAI,mBAAJ;AACA,SAAOG,IAAIc,UAAJ,CAAe,cAAf,CAAP;AACD;;AAEM,SAASpB,IAAT,CAAcM,GAAd,EAAmB;AACxBH,MAAI,kBAAJ;AACA,SAAOG,IAAIc,UAAJ,CAAe,aAAf,CAAP;AACD;;AAEM,SAASnB,GAAT,CAAaK,GAAb,EAAkB;AACvB,MAAMqB,UAAUrB,IAAImB,SAAJ,GAAgBE,OAAhC;AACA,MAAMC,eAAetB,IAAIuB,OAAJ,GAAc,CAAd,CAArB;;AAEA,MAAI,EAAED,gBAAgBD,OAAlB,CAAJ,EAAgC;AAC9BR,YAAQhB,GAAR,CAAY,kBAAZ;AACAgB,YAAQhB,GAAR,CAAY,0BAAZ,EAAwC2B,OAAOC,IAAP,CAAYJ,OAAZ,EAAqBK,IAArB,CAA0B,IAA1B,CAAxC;AACApB,YAAQqB,QAAR,GAAmB,CAAnB;AACA;AACD;;AAED,MAAMC,SAASP,QAAQC,YAAR,CAAf;AACA,MAAMO,aAAa7B,IAAI8B,iBAAJ,CAAsBF,MAAtB,CAAnB;;AAEA,MAAIG,OAAO,iBAAX;AACAA,OAAKf,EAAL,CAAQ,OAAR,EAAiB,YAAW;AAC1Be,SAAKC,KAAL,CAAW,UAASC,GAAT,EAAcC,MAAd,EAAsB;AAC/B,UAAID,GAAJ,EAAS;AAAE,cAAMA,GAAN;AAAY;AACvBC,aAAOlB,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5Be,aAAKI,GAAL;AACA7B,gBAAQ8B,IAAR;AACD,OAHD;;AAKA9B,cAAQ+B,KAAR,CAAcC,UAAd,CAAyB,IAAzB;AACAhC,cAAQ+B,KAAR,CAAcE,IAAd,CAAmBL,MAAnB;;AAEAA,aAAOK,IAAP,CAAYjC,QAAQkC,MAApB;AACAN,aAAOO,MAAP,CAAcF,IAAd,CAAmBjC,QAAQmC,MAA3B;AACAP,aAAOQ,SAAP,CAAiBpC,QAAQkC,MAAR,CAAeG,IAAhC,EAAsCrC,QAAQkC,MAAR,CAAeI,OAArD;;AAEAtC,cAAQkC,MAAR,CAAexB,EAAf,CAAkB,QAAlB,EAA4B,YAAM;AAChCkB,eAAOQ,SAAP,CAAiBpC,QAAQkC,MAAR,CAAeG,IAAhC,EAAsCrC,QAAQkC,MAAR,CAAeI,OAArD;AACD,OAFD;AAGD,KAjBD;AAkBD,GAnBD,EAmBGC,OAnBH,CAmBWhB,UAnBX;AAoBD;;AAEM,SAASjC,QAAT,CAAkBI,GAAlB,EAAuB;AAC5B;AACAA,MAAImB,SAAJ;;AAEA,MAAInB,IAAI8C,UAAJ,GAAiB,MAAjB,CAAJ,EAA8B;AAC5BjC,YAAQhB,GAAR,CAAYkD,KAAKC,SAAL,CAAehD,IAAImB,SAAJ,EAAf,EAAgC,IAAhC,EAAsC,CAAtC,CAAZ;AACD;AACF","file":"command-handlers.js","sourcesContent":["import debug from 'debug';\nimport fs from 'fs';\nimport sh from 'shelljs';\nimport { Client } from 'ssh2';\n\nconst log = debug('mup:module:default');\n\nsh.config.silent = true;\n\nexport function deploy() {\n  log('exec => mup deploy');\n}\n\nexport function init(api) {\n  log('exec => mup init');\n\n  const mupJs = api.resolvePath(__dirname, 'template/mup.js.sample');\n  const settinsJson = api.resolvePath(__dirname, 'template/settings.json');\n  const mupJsDst = api.resolvePath(process.cwd(), 'mup.js');\n\n  const settingsJsonDst = api.resolvePath(process.cwd(), 'settings.json');\n  const mupJsExists = fs.existsSync(mupJsDst);\n  const settingsJsonExist = fs.existsSync(settingsJsonDst);\n\n  if (!settingsJsonExist) {\n    sh.cp(settinsJson, settingsJsonDst);\n    console.log('Created settings.json');\n  } else {\n    console.log('Skipping creation of settings.json.');\n    console.log(`settings.json already exist at ${settingsJsonDst}.`);\n  }\n\n  if (!mupJsExists) {\n    sh.cp(mupJs, mupJsDst);\n\n    console.log('Created mup.js');\n    console.log('');\n    console.log('Next Steps:');\n    console.log('');\n    console.log('  Open mup.js and edit the config to meet your needs.');\n    console.log('  Required changes have been marked with a TODO comment.');\n    console.log('');\n    console.log('  Available options can be found in the docs at');\n    console.log('    https://github.com/zodern/meteor-up');\n    console.log('');\n    console.log('  Then, run the command:');\n    console.log('    mup setup');\n  } else {\n    console.log('Skipping creation of mup.js');\n    console.log(`mup.js already exists at ${mupJsDst}`);\n  }\n}\n\nexport function logs(api) {\n  log('exec => mup logs');\n  return api.runCommand('meteor.logs');\n}\n\nexport function reconfig(api) {\n  log('exec => mup reconfig');\n  return api.runCommand('meteor.envconfig').then(() => api.runCommand('meteor.start'));\n}\n\nexport function restart(api) {\n  log('exec => mup restart');\n  return api.runCommand('meteor.restart');\n}\n\nexport function setup(api) {\n  process.on('exit', function displayNextSteps(code) {\n    if (code > 0) {\n      return;\n    }\n\n    console.log('');\n    console.log('Next, you should run:');\n    console.log('    mup deploy');\n  });\n\n  log('exec => mup setup');\n  const config = api.getConfig();\n  return api.runCommand('docker.setup')\n    .then(() => {\n      if (config.proxy) {\n        return api.runCommand('proxy.setup');\n      }\n    });\n}\n\nexport function start(api) {\n  log('exec => mup start');\n  return api.runCommand('meteor.start');\n}\n\nexport function stop(api) {\n  log('exec => mup stop');\n  return api.runCommand('meteor.stop');\n}\n\nexport function ssh(api) {\n  const servers = api.getConfig().servers;\n  const serverOption = api.getArgs()[1];\n\n  if (!(serverOption in servers)) {\n    console.log('mup ssh <server>');\n    console.log('Available servers are:\\n', Object.keys(servers).join('\\n'));\n    process.exitCode = 1;\n    return;\n  }\n\n  const server = servers[serverOption];\n  const sshOptions = api._createSSHOptions(server);\n\n  var conn = new Client();\n  conn.on('ready', function() {\n    conn.shell(function(err, stream) {\n      if (err) { throw err; }\n      stream.on('close', function() {\n        conn.end();\n        process.exit();\n      });\n\n      process.stdin.setRawMode(true);\n      process.stdin.pipe(stream);\n\n      stream.pipe(process.stdout);\n      stream.stderr.pipe(process.stderr);\n      stream.setWindow(process.stdout.rows, process.stdout.columns);\n\n      process.stdout.on('resize', () => {\n        stream.setWindow(process.stdout.rows, process.stdout.columns);\n      });\n    });\n  }).connect(sshOptions);\n}\n\nexport function validate(api) {\n  // Shows validation errors\n  api.getConfig();\n\n  if (api.getOptions()['show']) {\n    console.log(JSON.stringify(api.getConfig(), null, 2));\n  }\n}\n"]}