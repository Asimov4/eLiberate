{"version":3,"sources":["../../../src/plugins/default/commands.js"],"names":["commandHandlers","init","description","handler","deploy","builder","yargs","option","boolean","logs","strict","number","alias","reconfig","restart","setup","start","stop","ssh","name","validate","bool"],"mappings":";;;;;;;AAAA;;IAAYA,e;;;;AAEL,IAAIC,sBAAO;AAChBC,eAAa,iCADG;AAEhBC,WAASH,gBAAgBC;AAFT,CAAX;;AAKA,IAAIG,0BAAS;AAClBF,eAAa,sBADK;AAElBG,SAFkB,mBAEVC,KAFU,EAEH;AACb,WAAOA,MAAMC,MAAN,CAAa,cAAb,EAA6B;AAClCL,mBAAa,gCADqB;AAElCM,eAAS;AAFyB,KAA7B,CAAP;AAID,GAPiB;;AAQlBL,WAASH,gBAAgBI;AARP,CAAb;;AAWA,IAAIK,sBAAO;AAChBP,eAAa,qDADG;AAEhBG,SAFgB,mBAERC,KAFQ,EAED;AACb,WAAOA,MACJI,MADI,CACG,KADH,EAEJH,MAFI,CAEG,MAFH,EAEW;AACdL,mBAAa,kDADC;AAEdS,cAAQ;AAFM,KAFX,EAMJJ,MANI,CAMG,QANH,EAMa;AAChBL,mBAAa,mBADG;AAEhBU,aAAO,GAFS;AAGhBJ,eAAS;AAHO,KANb,CAAP;AAWD,GAde;;AAehBL,WAASH,gBAAgBS;AAfT,CAAX;;AAkBA,IAAII,8BAAW;AACpBX,eAAa,qDADO;AAEpBC,WAASH,gBAAgBa;AAFL,CAAf;;AAKA,IAAIC,4BAAU;AACnBZ,eAAa,aADM;AAEnBC,WAASH,gBAAgBc;AAFN,CAAd;;AAKA,IAAIC,wBAAQ;AACjBb,eAAa,kEADI;AAEjBC,WAASH,gBAAgBe;AAFR,CAAZ;;AAKA,IAAIC,wBAAQ;AACjBd,eAAa,WADI;AAEjBC,WAASH,gBAAgBgB;AAFR,CAAZ;;AAKA,IAAIC,sBAAO;AAChBf,eAAa,UADG;AAEhBC,WAASH,gBAAgBiB;AAFT,CAAX;;AAKA,IAAIC,oBAAM;AACfC,QAAM,cADS;AAEfjB,eAAa,iBAFE;AAGfC,WAASH,gBAAgBkB;AAHV,CAAV;;AAMA,IAAIE,8BAAW;AACpBlB,eAAa,iBADO;AAEpBG,SAFoB,mBAEZC,KAFY,EAEL;AACb,WAAOA,MAAMC,MAAN,CAAa,MAAb,EAAqB;AAC1BL,mBAAa,6CADa;AAE1BmB,YAAM;AAFoB,KAArB,CAAP;AAID,GAPmB;;AAQpBlB,WAASH,gBAAgBoB;AARL,CAAf","file":"commands.js","sourcesContent":["import * as commandHandlers from './command-handlers';\n\nexport let init = {\n  description: 'Setup files for new mup project',\n  handler: commandHandlers.init\n};\n\nexport let deploy = {\n  description: 'Deploy app to server',\n  builder(yargs) {\n    return yargs.option('cached-build', {\n      description: 'Use build from previous deploy',\n      boolean: true\n    });\n  },\n  handler: commandHandlers.deploy\n};\n\nexport let logs = {\n  description: \"Show app\\'s logs. Supports options from docker logs\",\n  builder(yargs) {\n    return yargs\n      .strict(false)\n      .option('tail', {\n        description: 'Number of lines to show from the end of the logs',\n        number: true\n      })\n      .option('follow', {\n        description: 'Follow log output',\n        alias: 'f',\n        boolean: true\n      });\n  },\n  handler: commandHandlers.logs\n};\n\nexport let reconfig = {\n  description: 'Updates server env and start script to match config',\n  handler: commandHandlers.reconfig\n};\n\nexport let restart = {\n  description: 'Restart app',\n  handler: commandHandlers.restart\n};\n\nexport let setup = {\n  description: 'Install dependencies, custom certificates, and MongoDB on server',\n  handler: commandHandlers.setup\n};\n\nexport let start = {\n  description: 'Start app',\n  handler: commandHandlers.start\n};\n\nexport let stop = {\n  description: 'Stop app',\n  handler: commandHandlers.stop\n};\n\nexport let ssh = {\n  name: 'ssh [server]',\n  description: 'SSH into server',\n  handler: commandHandlers.ssh\n};\n\nexport let validate = {\n  description: 'validate config',\n  builder(yargs) {\n    return yargs.option('show', {\n      description: 'Show config after being modified by plugins',\n      bool: true\n    });\n  },\n  handler: commandHandlers.validate\n};\n"]}