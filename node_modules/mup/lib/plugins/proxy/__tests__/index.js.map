{"version":3,"sources":["../../../../src/plugins/proxy/__tests__/index.js"],"names":["servers","require","use","config","silent","timeout","serverInfo","cd","resolve","tmpdir","out","exec","code","to","equal","output","have","entriesCount"],"mappings":"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","file":"index.js","sourcesContent":["import chai, { expect } from 'chai';\nimport { describe, it } from 'mocha';\n\nimport chaiString from 'chai-string';\nimport os from 'os';\nimport path from 'path';\nimport { runSSHCommand } from '../../../utils';\nimport sh from 'shelljs';\n\nconst servers = require('../../../../tests/fixtures/servers');\n\nchai.use(chaiString);\n\nsh.config.silent = false;\n\ndescribe('module - proxy', function() {\n  this.timeout(60000000);\n\n  describe('setup', function() {\n\n    it('should setup proxy on \"meteor\" vm', async () => {\n      const serverInfo = servers['mymeteor'];\n      sh.cd(path.resolve(os.tmpdir(), 'tests/project-3'));\n      let out = sh.exec('mup setup');\n\n      expect(out.code).to.equal(0);\n      expect(out.output).to.have.entriesCount('Setup proxy', 1);\n      expect(out.output).to.have.entriesCount('Start proxy: SUCCESS', 1);\n\n      out = await runSSHCommand(serverInfo, 'docker ps');\n\n      expect(out.code).to.equal(0);\n      expect(out.output).to.have.entriesCount('mup-nginx-proxy', 2);\n      expect(out.output).to.have.entriesCount('mup-nginx-proxy-letsencrypt', 1);\n\n      out = await runSSHCommand(serverInfo, 'du --max-depth=2 /opt');\n      expect(out.output).to.have.entriesCount('/opt/mup-nginx-proxy', 4);\n      expect(out.output).to.have.entriesCount('/opt/mup-nginx-proxy/certs', 1);\n      expect(out.output).to.have.entriesCount('/opt/mup-nginx-proxy/mounted-certs', 1);\n      expect(out.output).to.have.entriesCount('/opt/mup-nginx-proxy/config', 1);\n\n      out = await runSSHCommand(serverInfo, 'ls /opt/mup-nginx-proxy/config');\n      expect(out.output).to.have.entriesCount('shared-config.sh', 1);\n      expect(out.output).to.have.entriesCount('env.list', 1);\n      expect(out.output).to.have.entriesCount('env_letsencrypt.list', 1);\n    });\n  });\n\n  describe('reconfig-shared', () => {\n    it('it should update shared settings', async () => {\n      const serverInfo = servers['mymeteor'];\n      sh.cd(path.resolve(os.tmpdir(), 'tests/project-3'));\n      sh.exec('mup setup');\n\n      let out = sh.exec('mup proxy reconfig-shared');\n      expect(out.code).to.equal(0);\n      expect(out.output).to.have.entriesCount('Configuring Proxy\\'s Shared Settings', 1);\n      expect(out.output).to.have.entriesCount('Start proxy: SUCCESS', 1);\n\n      out = await runSSHCommand(serverInfo, 'cat /opt/mup-nginx-proxy/config/shared-config.sh');\n      expect(out.output).to.have.entriesCount('CLIENT_UPLOAD_LIMIT=10M', 1);\n    });\n  });\n\n  describe('logs', () => {\n    it('should show nginx logs', () => {\n      sh.cd(path.resolve(os.tmpdir(), 'tests/project-3'));\n      sh.exec('mup setup');\n\n      let out = sh.exec('mup proxy logs --tail 2');\n      expect(out.output).to.have.entriesCount('Received event start for', 1);\n      expect(out.code).to.equal(0);\n    });\n  });\n});\n"]}