{"version":3,"sources":["../src/server-info.js"],"names":["parseOutput","serverInfo","prefix","suffix","codeSeperator","generateVarCommand","name","command","output","console","log","split","commandOutput","trim","code","vars","servers","server","then","result","catch"],"mappings":";;;;;QAcgBA,W,GAAAA,W;kBAWQC,U;;AAzBxB;;AAEA,IAAMC,SAAS,oCAAf;AACA,IAAMC,SAAS,oCAAf;AACA,IAAMC,gBAAgB,qBAAtB;AACA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,OAAlC,EAA2C;AACzC,wBACQL,MADR,GACiBI,IADjB,GACwBH,MADxB,aAEEI,OAFF,yBAGQH,aAHR;AAMD;;AAEM,SAASJ,WAAT,CAAqBQ,MAArB,EAA6B;AAClCC,UAAQC,GAAR,CAAYF,MAAZ;AACA,MAAIF,OAAOE,OAAOG,KAAP,CAAaT,MAAb,EAAqB,CAArB,EAAwBS,KAAxB,CAA8BR,MAA9B,EAAsC,CAAtC,CAAX;AACA,MAAIS,gBAAgBJ,OAAOG,KAAP,CAAaR,MAAb,EAAqB,CAArB,EAAwBQ,KAAxB,CAA8BP,aAA9B,EAA6C,CAA7C,CAApB;AACA,SAAO;AACLE,UAAMA,KAAKO,IAAL,EADD;AAELL,YAAQI,cAAcC,IAAd,EAFH;AAGLC,UAAMN,OAAOG,KAAP,CAAaP,aAAb,EAA4B,CAA5B,EAA+BS,IAA/B;AAHD,GAAP;AAKD;;AAEc,SAASZ,UAAT,CAAoBc,IAApB,EAA0BC,OAA1B,EAAmC;AAChD,MAAIC,SAASD,QAAQ,CAAR,CAAb;AACA,MAAIT,UAAUF,mBAAmB,MAAnB,EAA2B,SAA3B,CAAd;AACA,4BAAcY,MAAd,EAAsBV,OAAtB,EACCW,IADD,CACM,kBAAU;AACdT,YAAQC,GAAR,CAAYS,MAAZ;AACAV,YAAQC,GAAR,CAAYV,YAAYmB,OAAOX,MAAnB,CAAZ;AACD,GAJD,EAKCY,KALD,CAKOX,QAAQC,GALf;AAMD","file":"server-info.js","sourcesContent":["import { runSSHCommand } from './utils';\n\nconst prefix = '<============mup-var-start========';\nconst suffix = '================mup-var-stop=====>';\nconst codeSeperator = 'mup-var-code=======';\nfunction generateVarCommand(name, command) {\n  return `\n  echo \"${prefix}${name}${suffix}\"\n  ${command} 2>&1  \n  echo \"${codeSeperator}\"\n  echo $?\n  `;\n}\n\nexport function parseOutput(output) {\n  console.log(output);\n  let name = output.split(prefix)[1].split(suffix)[0];\n  let commandOutput = output.split(suffix)[1].split(codeSeperator)[0]\n  return {\n    name: name.trim(),\n    output: commandOutput.trim(),\n    code: output.split(codeSeperator)[1].trim()\n  }\n}\n\nexport default function serverInfo(vars, servers) {\n  let server = servers[0]\n  let command = generateVarCommand('test', 'ls /opt')\n  runSSHCommand(server, command)\n  .then(result => {\n    console.log(result);\n    console.log(parseOutput(result.output));\n  })\n  .catch(console.log)\n}\n"]}